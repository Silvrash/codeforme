{"version":3,"sources":["Assets/sample2.gif","Assets/wbg.png","Assets/sample.gif","Assets/speech.gif","resources/redux/reducers/index.js","resources/redux/types/settings.js","resources/redux/store/index.js","App.js","Components/Menu/ProjectMenu.jsx","resources/redux/actions/settings.js","Components/Menu/SettingsMenu.jsx","Components/Drawer/index.jsx","Components/Header/index.jsx","resources/constants/index.js","Components/AceEditor/index.js","resources/client.jsx","Components/PyConsole/index.jsx","Components/Recorder/styles.js","Components/Recorder/index.jsx","Components/pages/Editor.jsx","serviceWorker.js","index.js","Routes.js"],"names":["module","exports","__webpack_require__","p","initialState","theme","tabSize","fontSize","lazyMode","lineNumbers","splits","language","orientation","editorMode","rows","combineReducers","settings","state","arguments","length","undefined","action","type","Object","objectSpread","payload","routing","routerReducer","enhancers","compose","applyMiddleware","apply","window","devToolsExtension","f","store","createStore","rootReducer","history","syncHistoryWithStore","browserHistory","withStyles","_shortDescriptions","root","backgroundColor","backgroundImage","concat","backgroundImg","minHeight","width","backgroundPosition","backgroundRepeat","backgroundSize","color","content","display","justifyContent","alignItems","alignContent","marginTop","flexDirection","landingHeaderText","defineProperty","padding","textAlign","breakpoints","down","landingSubText","paddingTop","button","margin","spacing","unit","&:hover","images","moreImages","shortDescriptions","descriptionTitle","fontWeight","descriptionItem","descriptionSub","gridList","transform","title","fontFamily","footer","height","titleContainer","codeIcon","marginRight","_ref","classes","react_default","a","createElement","react","CssBaseline_default","className","AppBar_default","position","style","boxShadow","Toolbar_default","Typography_default","variant","noWrap","Button_default","size","onClick","push","Hidden_default","mdUp","src","sample2","alt","xsDown","smDown","sample1","happyDude","ProjectMenu","Component","handleSettingsChange","name","value","SettingsMenu","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","checked","event","target","nextProps","setState","List_default","ListItem_default","flexGrow","FormControl_default","formControl","Select_default","onChange","input","OutlinedInput_default","themeField","labelWidth","MenuItem_default","TextField_default","textField","defaultValue","Switch_default","mapDispatchToProps","connect","menuItem","marginLeft","borderRadius","TabContainer","component","children","drawerPaper","palette","primary","main","borderColor","toolbar","mixins","sideTabs","secondary","open","onClose","selectedTabIndex","handleTabChange","Drawer_default","paper","ModalProps","keepMounted","Hidden_Hidden_default","implementation","Tabs_default","textColor","scrollable","scrollButtons","Tab_default","label","tabItem","Drawer_TabContainer","Menu_ProjectMenu","Menu_SettingsMenu","paddingLeft","paddingRight","grow","languageSelect","appBar","zIndex","drawer","up","withTheme","apptheme","handleDrawerMobileToggle","handleDrawerToggle","core_AppBar_default","core_Toolbar_default","disableGutters","IconButton_default","aria-label","Menu_default","baseUrl","document","domain","createMuiTheme","typography","useNextVariants","AceEditor","_Component","onCodeChanged","code","onLoad","editor","addEventListener","resize","selectedRow","selectedRowNo","intent","onBeforeLoad","ace","langTools","acequire","edit","classRef","assertThisInitialized","$blockScrolling","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","customCompleter","getCompletions","_getCompletions","asyncToGenerator","regenerator_default","mark","_callee","session","pos","prefix","callback","completions","res","wrap","_context","prev","next","abrupt","startsWith","row","getLine","replace","trim","axios","get","sent","data","forEach","item","meta","command","snippet","stop","_x","_x2","_x3","_x4","_x5","addCompleter","inherits","createClass","key","_this$state$settings","react_ace_lib","mode","ref","debounceChangePeriod","focus","showPrintMargin","wrapEnabled","showGutter","highlightActiveLine","enableSnippets","showLineNumbers","animatedScroll","useWorker","editorProps","socket","require","PyConsole","index","on","arg","activeEditor","aceEditor","newHeight","getSession","getScreenLength","renderer","lineHeight","scrollBar","getWidth","container","onEnterPressed","shiftKey","keys","toConsumableArray","console","log","emit","predictions","caption","0","1","codeOutput","el","scrollIntoView","behavior","scrollToBottom","maxScrollTop","scrollHeight","clientHeight","scrollTop","_this2","text","_this3","classNames","snackBarMargin","map","Card_default","card","CardContent_default","cardContent","core_Typography_default","lineInput","react_ace_lib_default","toString","readOnly","core_TextField_default","InputProps","inputProps","inputPropsDark","overflowY","marginBottom","inputField","styles","recorderButton","soundWave","controls","icon","mic","timer","letterSpacing","Recorder","startRecording","stream","persmission","navigator","mediaDevices","getUserMedia","audio","active","incrementer","setInterval","secondsElapsed","record","stopRecording","_callee2","_context2","clearInterval","lastClearedIncrementer","formattedSeconds","sec","Math","floor","slice","recordedBlob","blob","react_mic_lib","onStop","visualSetting","audioBitsPerSecond","onData","strokeColor","Pause_default","MicRounded_default","Editor","toggleDrawer","mobile","side","_classNames","Components_Header","Components_Drawer","contentShift","Components_PyConsole","Components_AceEditor","Snackbar_default","anchorOrigin","vertical","horizontal","SnackbarContent_default","recoderContent","aria-describedby","message","id","Components_Recorder","_content","overflow","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","paddingBottom","Boolean","location","hostname","match","render","es","MuiThemeProvider","react_router_es","exact","path","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.766d43a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sample2.509918b2.gif\";","module.exports = __webpack_public_path__ + \"static/media/wbg.70391e84.png\";","module.exports = __webpack_public_path__ + \"static/media/sample.b98f7b41.gif\";","module.exports = __webpack_public_path__ + \"static/media/speech.113cbe7d.gif\";","import {combineReducers} from \"redux\";\nimport {routerReducer} from 'react-router-redux'\nimport {SETTINGS_CHANGE} from \"../types/settings\";\n\nconst initialState = {\n    theme: 'light',\n    tabSize: 4,\n    fontSize: 20,\n    lazyMode: true,\n    lineNumbers: true,\n    splits: 1,\n    language: 'python',\n    orientation: 'beside',\n    editorMode: 'pyconsole',\n    rows: [1]\n}\n\nconst settings = (state = initialState, action) => {\n    switch (action.type) {\n        case SETTINGS_CHANGE:\n            return {...state, ...action.payload}\n        default:\n            return state\n    }\n};\n\nexport default combineReducers({\n    settings: settings,\n    routing: routerReducer\n});\n//npm i --save-dev babel-plugin-transform-object-rest-spread","const SETTINGS_CHANGE = 'SETTINGS-CHANGE';\nexport {\n    SETTINGS_CHANGE\n}","import {compose, createStore, applyMiddleware} from 'redux'\nimport {browserHistory} from \"react-router\";\nimport {syncHistoryWithStore} from 'react-router-redux'\nimport rootReducer from '../reducers'\n\nconst middleware = [\n  // createLogger()\n]\n\nconst enhancers = compose(\n  applyMiddleware(...middleware),\n  window.devToolsExtension? window.devToolsExtension() : f => false\n)\n\nconst store = createStore(\n  rootReducer,\n  {},\n  enhancers\n);\n\nconst history = syncHistoryWithStore(browserHistory, store);\n\nexport {\n  store,\n  history\n};","import React, {Fragment} from 'react';\nimport backgroundImg from './Assets/wbg.png';\nimport CssBaseline from \"@material-ui/core/CssBaseline/CssBaseline\";\nimport {withStyles} from '@material-ui/core/styles';\nimport AppBar from \"@material-ui/core/AppBar/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar/Toolbar\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport sample1 from './Assets/sample.gif'\nimport sample2 from './Assets/sample2.gif'\nimport happyDude from './Assets/speech.gif'\nimport Hidden from \"@material-ui/core/Hidden\";\n\n\nconst styles = theme => ({\n    root: {\n        backgroundColor: '#282c34',\n        backgroundImage: `url(${backgroundImg})`,\n        minHeight: '100vh',\n        width: '100%',\n        // filter: 'blur(5px)',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        fontSize: `calc(10px + 2vmin)`,\n        color: 'white'\n    },\n    content: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        marginTop: '25vh',\n        flexDirection: 'column'\n    },\n    landingHeaderText: {\n        padding: '5px',\n        textAlign: 'center',\n        [theme.breakpoints.down('xs')]: {\n            fontSize: '30px',\n        },\n    },\n    landingSubText: {\n        textAlign: 'center',\n        paddingTop: '5px'\n    },\n    button: {\n        margin: theme.spacing.unit,\n        marginTop: '50px',\n        backgroundColor: '#ec3360',\n        '&:hover': {\n            backgroundColor: '#c42749'\n        }\n    },\n    images: {\n        display: 'flex',\n        width: '100%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'row'\n    },\n    moreImages: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        flexDirection: 'column'\n    },\n    shortDescriptions: {\n        marginTop: '100px',\n        width: '100%',\n        // height: '300px',\n        display: 'flex',\n        padding: '10px',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column',\n        },\n        textAlign: 'left',\n        backgroundColor: '#2e2c35'\n    },\n    descriptionTitle: {\n        fontWeight: '200',\n        padding: '20px'\n    },\n    descriptionItem: {\n        padding: '5px',\n        width: '30%',\n        [theme.breakpoints.down('xs')]: {\n            width: '100%'\n        },\n    },\n    descriptionSub: {\n        padding: '5px',\n    },\n    gridList: {\n        width: '50%',\n        transform: 'translateZ(0)',\n    },\n    title: {\n        fontFamily: \"'Courgette', cursive\"\n    },\n    footer: {\n        width: '100%',\n        height: '50px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#30353e',\n        color: '#8e9095'\n    },\n    titleContainer: {\n        display: 'flex',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: 'flex-start'\n    },\n    codeIcon: {\n        fontWeight: 600,\n        marginRight: 10\n    }\n})\nconst App = ({classes, history}) => (\n\n    <Fragment>\n        <CssBaseline/>\n        <div className={classes.root}>\n            <AppBar position=\"static\" style={{backgroundColor: 'transparent', boxShadow: 'none'}}>\n                <Toolbar>\n                <div className={classes.titleContainer}>\n                    <Typography className={classes.codeIcon} variant=\"h5\" color=\"inherit\" noWrap>\n                        {\"</>\"}\n                    </Typography>\n                    <Typography className={classes.title} variant=\"h5\" color=\"inherit\" noWrap>\n                        CodeForMe\n                    </Typography>\n                </div>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.content}>\n                <Typography className={classes.landingHeaderText} variant={\"h3\"} color={\"inherit\"}>\n                    Natural language to code in Real-time\n                </Typography>\n                <Typography className={classes.landingSubText} variant={'body2'} color={'inherit'}>\n                    An online code editor for learning with natural language support\n                </Typography>\n                <Button variant=\"contained\" color=\"primary\" size=\"large\" className={classes.button}\n                        onClick={() => history.push('/code')}>\n                    Code Now\n                </Button>\n                <div className={classes.images}>\n                    <Hidden mdUp>\n                        <img src={sample2} alt=\"sample-1\" style={{marginTop: '50px', padding: 10}}\n                             width={'100%'} height={'50%'}/>\n                    </Hidden>\n                    <Hidden xsDown={true} smDown={true}>\n                        <img src={sample2} alt=\"sample-1h\" style={{marginTop: '50px', padding: 10}}\n                             width={522} height={330}/>\n                        <div className={classes.moreImages}>\n                            <img src={sample1} style={{marginTop: '50px', padding: 10}} alt=\"sample-2\"\n                                 width={'252px'}\n                                 height={'150px'}/>\n                            <img src={happyDude} style={{marginTop: '20px', padding: 10}} alt=\"sample-3\"\n                                 width={'252px'}\n                                 height={'150px'}/>\n                        </div>\n                    </Hidden>\n                </div>\n                <div className={classes.shortDescriptions}>\n                    <div className={classes.descriptionItem}>\n                        <Typography className={classes.descriptionTitle} variant={'h4'} color={'inherit'}>\n                            Teach yourself code\n                        </Typography>\n                        <Typography className={classes.descriptionSub} variant={'subtitle1'} color={'inherit'}>\n                            Coding made easy with the help of our engine which can take your commands in natural\n                            language and suggest to you the corresponding code snippet\n                        </Typography>\n                    </div>\n                    <div className={classes.descriptionItem}>\n                        <Typography className={classes.descriptionTitle} variant={'h4'} color={'inherit'}>\n                            Lazy coding\n                        </Typography>\n                        <Typography className={classes.descriptionSub} variant={'subtitle1'} color={'inherit'}>\n                            Sit back and relax whiles we do the typing for you. Just talk, we can take care of the\n                            typing.\n                        </Typography>\n                    </div>\n                    <div className={classes.descriptionItem}>\n                        <Typography className={classes.descriptionTitle} variant={'h4'} color={'inherit'}>\n                            Code with your team\n                        </Typography>\n                        <Typography className={classes.descriptionSub} variant={'subtitle1'} color={'inherit'}>\n                            Open a Codeshare editor, write or copy code, then share it with friends and colleagues. Pair\n                            program and troubleshoot together.\n                        </Typography>\n                    </div>\n                </div>\n                <Typography variant={\"caption\"} className={classes.footer}>\n                    Created by Benjamin Arko Afrasah, Opara Obinna G. and Alfred Sarpong Adjei. For help and support please send us an\n                    email\n                </Typography>\n\n            </div>\n        </div>\n\n    </Fragment>\n);\n\nexport default withStyles(styles)(App);\n","import React, {Component} from 'react';\n\nclass ProjectMenu extends Component {\n    render() {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default ProjectMenu;","import {SETTINGS_CHANGE} from \"../types/settings\";\n\nconst handleSettingsChange = (name, value) => ({\n    type: SETTINGS_CHANGE,\n    payload: {\n        [name]: value,\n    }\n});\n\nexport {\n    handleSettingsChange\n}","import React, { Component, Fragment } from 'react';\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport { withStyles } from '@material-ui/core/styles';\nimport List from \"@material-ui/core/List/List\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport Switch from \"@material-ui/core/Switch/Switch\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport Select from \"@material-ui/core/Select/Select\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput/OutlinedInput\";\nimport { connect } from 'react-redux';\nimport { handleSettingsChange } from \"../../resources/redux/actions/settings\";\n\nconst styles = theme => ({\n    menuItem: {\n        color: 'white'\n    },\n    textField: {\n        width: '40%',\n        height: '40px',\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        backgroundColor: 'white',\n        borderRadius: 5\n    },\n    themeField: {\n        // width: '0%',\n        height: '40px',\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        backgroundColor: 'white',\n        borderRadius: 5\n    }\n});\n\nclass SettingsMenu extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...props.settings\n        };\n    }\n\n    handleChange = (name, checked) => event => {\n        if (checked)\n            this.props.handleSettingsChange(name, event.target.checked)\n        else this.props.handleSettingsChange(name, event.target.value)\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props !== nextProps) {\n            this.setState({ ...nextProps.settings })\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <List style={{ width: '100%', margin: 0 }}>\n                <ListItem>\n                    <Typography variant={'body2'} color={'inherit'}>\n                        Language\n                    </Typography>\n                    <div style={{ flexGrow: 1 }} />\n                    <FormControl className={classes.formControl}>\n                        <Select\n                            value={this.state.language}\n                            onChange={this.handleChange('language')}\n                            input={\n                                <OutlinedInput\n                                    className={classes.themeField}\n                                    labelWidth={0}\n                                />\n                            }\n                        >\n                            <MenuItem value={'python'}>Python</MenuItem>\n                        </Select>\n                    </FormControl>\n                </ListItem>\n                <ListItem>\n                    <Typography variant={'body2'} color={'inherit'}>\n                        Theme\n                    </Typography>\n                    <div style={{ flexGrow: 1 }} />\n                    <FormControl className={classes.formControl}>\n                        <Select\n                            value={this.state.theme}\n                            onChange={this.handleChange('theme')}\n                            input={\n                                <OutlinedInput\n                                    className={classes.themeField}\n                                    labelWidth={0}\n                                />\n                            }\n                        >\n                            <MenuItem value=\"light\">\n                                Light\n                            </MenuItem>\n                            <MenuItem value={'dark'}>Dark</MenuItem>\n                        </Select>\n                    </FormControl>\n                </ListItem>\n                <ListItem>\n                    <Typography variant={'body2'} color={'inherit'}>\n                        Tab size\n                    </Typography>\n                    <div style={{ flexGrow: 1 }} />\n                    <TextField\n                        className={classes.textField}\n                        defaultValue={this.state.tabSize}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.handleChange('tabSize')}\n                        type=\"number\"\n\n                    />\n                </ListItem>\n                {/* <ListItem>\n                    <Typography variant={'body2'} color={'inherit'}>\n                        Font size\n                    </Typography>\n                    <div style={{ flexGrow: 1 }} />\n                    <TextField\n                        className={classes.textField}\n                        defaultValue={this.state.fontSize}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.handleChange('fontSize')}\n                        type=\"number\"\n\n                    />\n                </ListItem> */}\n                <ListItem>\n                    <Typography variant={'body2'} color={'inherit'}>\n                        Lazy Mode\n                    </Typography>\n                    <div style={{ flexGrow: 1 }} />\n                    <Switch\n                        checked={this.state.lazyMode}\n                        onChange={this.handleChange('lazyMode', true)}\n                    />\n                </ListItem>\n                {/* <ListItem>\n                    <Typography variant={'body2'} color={'inherit'}>\n                        Line numbers\n                    </Typography>\n                    <div style={{ flexGrow: 1 }} />\n                    <Checkbox\n                        checked={this.state.lineNumbers}\n                        onChange={this.handleChange('lineNumbers', true)}\n                    />\n                </ListItem> */}\n                <ListItem>\n                    <Typography variant={'body2'} color={'inherit'}>\n                        Mode\n                    </Typography>\n                    <div style={{ flexGrow: 1 }} />\n                    <FormControl className={classes.formControl}>\n                        <Select\n                            value={this.state.editorMode}\n                            onChange={this.handleChange('editorMode')}\n                            input={\n                                <OutlinedInput\n                                    className={classes.themeField}\n                                    labelWidth={0}\n                                />\n                            }\n                        >\n                            <MenuItem value={'pyconsole'}>PyConsole</MenuItem>\n                            <MenuItem value={'editor'}>Editor</MenuItem>\n                        </Select>\n                    </FormControl>\n                </ListItem>\n                {this.state.editorMode === 'editor' && <Fragment>\n                <ListItem>\n                    <Typography variant={'body2'} color={'inherit'}>\n                        Splits\n                    </Typography>\n                    <div style={{ flexGrow: 1 }} />\n                    <FormControl className={classes.formControl}>\n                        <Select\n                            value={this.state.splits}\n                            onChange={this.handleChange('splits')}\n                            input={\n                                <OutlinedInput\n                                    className={classes.themeField}\n                                    labelWidth={0}\n                                />\n                            }\n                        >\n                            <MenuItem value={1}>1</MenuItem>\n                            <MenuItem value={2}>2</MenuItem>\n                            <MenuItem value={3}>3</MenuItem>\n                            <MenuItem value={4}>4</MenuItem>\n                        </Select>\n                    </FormControl>\n                </ListItem>\n                <ListItem>\n                    <Typography variant={'body2'} color={'inherit'}>\n                        Orientation\n                    </Typography>\n                    <div style={{ flexGrow: 1 }} />\n                    <FormControl className={classes.formControl}>\n                        <Select\n                            value={this.state.orientation}\n                            onChange={this.handleChange('orientation')}\n                            input={\n                                <OutlinedInput\n                                    className={classes.themeField}\n                                    labelWidth={0}\n                                />\n                            }\n                        >\n                            <MenuItem value={\"beside\"}>Beside</MenuItem>\n                            <MenuItem value={\"below\"}>Below</MenuItem>\n                        </Select>\n                    </FormControl>\n                </ListItem>\n                </Fragment>}\n            </List>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    settings: {\n        theme: state.settings.theme,\n        tabSize: state.settings.tabSize,\n        fontSize: state.settings.fontSize,\n        lazyMode: state.settings.lazyMode,\n        editorMode: state.settings.editorMode,\n        lineNumbers: state.settings.lineNumbers,\n        splits: state.settings.splits,\n        language: state.settings.language,\n        orientation: state.settings.orientation\n    }\n})\n\nconst mapDispatchToProps = {\n    handleSettingsChange\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SettingsMenu));","import React from 'react';\nimport Drawer from \"@material-ui/core/Drawer/Drawer\";\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types'\nimport Hidden from \"@material-ui/core/Hidden/Hidden\";\nimport Tabs from \"@material-ui/core/Tabs/Tabs\";\nimport Tab from \"@material-ui/core/Tab/Tab\";\nimport ProjectMenu from \"../Menu/ProjectMenu\";\nimport SettingsMenu from \"../Menu/SettingsMenu\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\n\nconst drawerWidth = 240;\nconst TabContainer = (props) => {\n    return (\n        <Typography component=\"div\" style={{ color: 'white' }}>\n            {props.children}\n        </Typography>\n    );\n}\nconst styles = theme => ({\n    drawerPaper: {\n        width: drawerWidth,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main,\n    },\n    toolbar: theme.mixins.toolbar,\n    sideTabs: { color: 'white', fontWeight: 400 },\n    title: {\n        // padding: 20,\n        // display: 'flex',\n        fontFamily: \"'Courgette', cursive\",\n        color: 'white'\n    },\n    titleContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: 20,\n        justifyContent: 'space-evenly'\n    },\n    codeIcon: {\n        color: theme.palette.secondary.main,\n        fontWeight: 600\n    }\n});\n\n\nconst NavDrawer = (props) => {\n    const {\n        open,\n        classes,\n        variant,\n        onClose,\n        selectedTabIndex,\n        handleTabChange\n    } = props;\n    return (\n        <Drawer\n            variant={variant}\n            open={open}\n            onClose={onClose}\n            classes={{\n                paper: classes.drawerPaper\n            }}\n            ModalProps={{\n                keepMounted: true, // Better open performance on mobile.\n            }}\n        >\n            <Hidden smDown implementation=\"css\">\n                {/* <div className={classes.toolbar} /> */}\n                <div className={classes.titleContainer}>\n                    <Typography className={classes.codeIcon} variant=\"h5\" color=\"inherit\" noWrap>\n                        {\"</>\"}\n                    </Typography>\n                    <Typography className={classes.title} variant=\"h5\" color=\"inherit\" noWrap>\n                        CodeForMe\n                    </Typography>\n                </div>\n            </Hidden>\n\n            <div className={classes.sideTabs}>\n                <Tabs value={selectedTabIndex} onChange={handleTabChange}\n                    textColor=\"inherit\"\n                    scrollable\n                    scrollButtons=\"off\">\n                    <Tab value={0} label=\"Projects\" className={classes.tabItem} />\n                    <Tab value={1} label=\"Settings\" className={classes.tabItem} />\n                </Tabs>\n            </div>\n            {selectedTabIndex === 0 && <TabContainer><ProjectMenu /></TabContainer>}\n            {selectedTabIndex === 1 && <TabContainer><SettingsMenu /></TabContainer>}\n\n        </Drawer>\n    );\n};\n\nNavDrawer.propTypes = {\n    open: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n    variant: PropTypes.string.isRequired,\n    onClose: PropTypes.func,\n}\n\nexport default withStyles(styles)(NavDrawer);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Hidden from \"@material-ui/core/Hidden/Hidden\";\nimport Select from \"@material-ui/core/Select/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        // display: 'flex',\n        width: '100%',\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        paddingLeft: theme.spacing.unit,\n        paddingRight: theme.spacing.unit,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    title: {\n        display: 'block',\n        padding: 5,\n        fontFamily: \"'Courgette', cursive\",\n        color: theme.palette.secondary.main,\n    },\n    languageSelect: {\n        display: 'block',\n        padding: 5,\n        fontFamily: \"'Courgette', sans-serif\",\n    },\n\n    appBar: {\n        alignContent: 'center',\n        zIndex: theme.zIndex.drawer + 1,\n        [theme.breakpoints.up('md')]: {\n            // padding: theme.spacing.unit,\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n            backgroundColor: 'white'\n        },\n    },\n});\n\nconst Header = ({ classes, theme, apptheme, handleDrawerToggle, handleDrawerMobileToggle, languageSelect, language }) => (\n    <div className={classes.root}>\n        <AppBar color={'primary'} className={classes.appBar} style={(apptheme === 'dark')? {backgroundColor: theme.palette.primary.main}: {}}>\n\n            <Toolbar disableGutters={true}>\n                <Hidden mdUp>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"Open drawer\"\n                        onClick={handleDrawerMobileToggle}\n                    >\n                        <MenuIcon style={{color: theme.palette.secondary.main}} />\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h5\" color=\"inherit\" noWrap>\n                        CodeForMe\n                    </Typography>\n                </Hidden>\n                {/*<Hidden smDown implementation=\"css\">*/}\n                {/*<IconButton*/}\n                {/*color=\"inherit\"*/}\n                {/*aria-label=\"Open drawer\"*/}\n                {/*onClick={handleDrawerToggle}*/}\n                {/*>*/}\n                {/*<MenuIcon/>*/}\n                {/*</IconButton>*/}\n                {/*</Hidden>*/}\n\n                <div className={classes.grow} />\n                <Select\n                    value={language}\n                    variant={'filled'}\n                    style={{ color: 'white' }}\n                    onChange={languageSelect}\n                >\n                    <MenuItem value={'python'}>\n                        <Typography className={classes.languageSelect} variant=\"body1\" color=\"secondary\" noWrap>\n                            Python\n                        </Typography>\n                    </MenuItem>\n                    {/*<MenuItem value={'javascript'}>*/}\n                    {/*<Typography className={classes.languageSelect} variant=\"subheading\" color=\"secondary\" noWrap>*/}\n                    {/*Javascript*/}\n                    {/*</Typography>*/}\n                    {/*</MenuItem>*/}\n                    {/*<MenuItem value={'java'}>*/}\n                    {/*<Typography className={classes.languageSelect} variant=\"subheading\" color=\"secondary\" noWrap>*/}\n                    {/*Java*/}\n                    {/*</Typography>*/}\n                    {/*</MenuItem>*/}\n                </Select>\n            </Toolbar>\n        </AppBar>\n    </div>\n);\n\nexport default withStyles(styles, { withTheme: true })(Header);","import {createMuiTheme} from '@material-ui/core/styles';\n\nconst baseUrl = 'http://' + document.domain + ':' + 5000;\n// const baseUrl = 'https://codeforme.herokuapp.com'\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#2c353e'\n        },\n        secondary: {\n            main: '#17D4FE'\n        },\n        type: \"light\"\n    },\n    typography: {\n        \"fontFamily\": \"\\\"Poppins\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n        useNextVariants: true,\n        color: '#4f5f6f'\n    }\n});\n\nexport {\n    baseUrl,\n    theme\n};","import axios from 'axios';\nimport { baseUrl } from \"../../resources/constants\";\nimport React, { Component } from 'react';\nimport { split as SplitEditor } from 'react-ace';\nimport connect from \"react-redux/es/connect/connect\";\nimport 'brace/ext/language_tools';\nimport 'brace/mode/javascript';\nimport 'brace/mode/python';\nimport 'brace/snippets/python';\nimport 'brace/theme/crimson_editor';\nimport 'brace/theme/dracula';\nimport 'brace/theme/eclipse';\nimport 'brace/theme/github';\nimport 'brace/theme/monokai';\nimport 'brace/theme/tomorrow_night_blue';\nimport 'brace/theme/tomorrow_night_eighties';\n\nexport class AceEditor extends Component {\n    static propTypes = {\n\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            code: [`def foo():\n  #do_some_stuff() here\n  return None\n\nclass Bar:\n  def __init__(self):\n    if True:\n      print(\"True\")\n    else:\n      print(\"False\")\n\n# A comment`, `def foo():\n  #do_some_stuff() here\n  return None\n\nclass Bar:\n  def __init__(self):\n    if True:\n      print(\"True\")\n    else:\n      print(\"False\")\n\n# A comment`],\n            settings: {\n                ...props.settings\n            },\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps !== this.props) {\n            this.setState({\n                settings: {\n                    ...nextProps.settings\n                }\n            })\n        }\n    }\n\n\n    onCodeChanged = (code) => this.setState({ code: code })\n\n    onLoad = editor => {\n        // console.log(editor)\n        window.addEventListener('resize', () => {\n            editor.resize();\n        });\n    };\n\n    componentDidMount() {\n        // const customMode = new CustomSqlMode();\n        // console.log(this.refs.aceEditor.editor)\n        // this.refs.aceEditor.editor.getSession().setMode(customMode);\n    }\n\n\n    selectedRow = false;\n    selectedRowNo = null;\n    intent = null;\n    onBeforeLoad = ace => {\n        let langTools = ace.acequire('ace/ext/language_tools');\n        let editor = ace.edit('editor')\n        // console.log(ace)\n        let classRef = this;\n        editor.$blockScrolling = 'Infinity'\n        editor.setOptions({ enableBasicAutocompletion: true, enableLiveAutocompletion: true });\n        // let snippetManager = ace.acequire(\"ace/snippets\").snippetManager\n        // console.log(snippetManager)\n        // ace.define(\"ace/snippets/python\", [\"require\", \"exports\", \"module\"], (e, t, n) => {\n        //     console.log(t)\n        //     t.snippetText = 'snippet #!\\n\t#!/usr/bin/env python\\nsnippet load\\n\timport ${1:kill}\\n', t.scope = \"python\"\n        // })\n        let customCompleter = {\n            getCompletions: async function (editor, session, pos, prefix, callback) {\n                let completions = []\n                let data = []\n                if (prefix.length === 0) {\n                    callback(null, []);\n                    return\n                }\n                if (prefix.startsWith('--')) {\n                    classRef.selectedRow = true\n                    classRef.selectedRowNo = pos.row\n\n                } else if (pos.row !== classRef.selectedRowNo) {\n                    classRef.selectedRowNo = null\n                    classRef.selectedRow = null\n                    classRef.intent = null\n                }\n                if (classRef.selectedRow) {\n                    const intent = session.getLine(pos.row).replace(\"--\", \"\").replace(\"#\", \"\").trim()\n                    if (intent) {\n                        const res = await axios.get(`${baseUrl}/api/snippets/${intent}`)\n                        data = res.data.data;\n                        data.forEach((item) => {\n                            completions.push({\n                                // caption: intent,\n                                type: 'snippet',\n                                meta: 'snippet',\n                                // name: item.command,\n                                value: item.command,\n                                snippet: `${item.command}\\n${item.snippet}`\n                            })\n                        })\n                    }\n                }\n                return callback(null, completions)\n            }\n        };\n\n        langTools.addCompleter(customCompleter);\n\n    }\n    render() {\n        const {\n            theme,\n            language,\n            tabSize,\n            fontSize,\n            // lazyMode,\n            lineNumbers,\n            splits,\n            orientation\n        } = this.state.settings;\n\n        return (\n                <SplitEditor\n                    mode={language}\n                    ref={'aceEditor'}\n                    theme={(theme === 'dark') ? \"monokai\" : \"crimson_editor\"}\n                    name=\"editor\"\n                    splits={splits}\n                    orientation={orientation}\n                    value={this.state.code}\n                    onLoad={this.onLoad}\n                    onChange={this.onCodeChanged}\n                    debounceChangePeriod={1}\n                    onBeforeLoad={this.onBeforeLoad}\n                    focus={true}\n                    showPrintMargin={true}\n                    fontSize={fontSize}\n                    wrapEnabled={true}\n                    showGutter={true}\n                    highlightActiveLine={true}\n                    width=\"100%\"\n                    height=\"90%\"\n                    setOptions={{\n                        enableBasicAutocompletion: true,\n                        enableLiveAutocompletion: true,\n                        enableSnippets: true,\n                        tabSize: tabSize,\n                        showGutter: true,\n                        showLineNumbers: lineNumbers,\n                        animatedScroll: true,\n                        useWorker: true\n                    }}\n                    editorProps={{ $blockScrolling: 'Infinity' }}\n                />\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    settings: {\n        theme: state.settings.theme,\n        tabSize: state.settings.tabSize,\n        fontSize: state.settings.fontSize,\n        lazyMode: state.settings.lazyMode,\n        lineNumbers: state.settings.lineNumbers,\n        splits: state.settings.splits,\n        language: state.settings.language,\n        orientation: state.settings.orientation\n    }\n})\n\nexport default connect(mapStateToProps)(AceEditor)\n","import {baseUrl} from \"./constants\";\n\nlet socket = require('socket.io-client')(baseUrl);\n\n// socket.on('connect', () => {\n  // socket.emit('connected');\n// });\n\nexport {\n  socket,\n};","import React, { Component } from 'react'\n// import PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { baseUrl } from \"../../resources/constants\";\nimport AceEditor from 'react-ace';\nimport axios from 'axios';\nimport { handleSettingsChange } from \"../../resources/redux/actions/settings\";\nimport classNames from 'classnames';\nimport { socket } from '../../resources/client'\n\n\n\nimport 'brace/ext/language_tools';\nimport 'brace/mode/javascript';\nimport 'brace/mode/python';\nimport 'brace/snippets/python';\nimport 'brace/theme/crimson_editor';\nimport 'brace/theme/dracula';\nimport 'brace/theme/eclipse';\nimport 'brace/theme/github';\nimport 'brace/theme/monokai';\nimport 'brace/theme/tomorrow_night_blue';\nimport 'brace/theme/tomorrow_night_eighties';\n\n\n\nconst styles = theme => ({\n    root: {\n        padding: 10,\n        height: '85vh',\n        overflowY: 'auto',\n        // backgroundColor: 'black'\n    },\n    card: {\n        marginBottom: 10,\n    },\n    inputField: {\n        width: '100%'\n    },\n    lineInput: {\n        [theme.breakpoints.down('xs')]: {\n            // padding: theme.spacing.unit,\n        },\n    },\n    cardContent: {\n        display: 'flex',\n        width: '100%',\n        height: '100%',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center'\n    },\n    textField: {\n        width: '100%',\n        paddingLeft: 130,\n        paddingRight: 100,\n        [theme.breakpoints.down('xs')]: {\n            minHeight: '10px',\n            paddingLeft: 50,\n            paddingRight: 50,\n        },\n    },\n    inputPropsDark: {\n        color: '#fff'\n    },\n    inputProps: {\n        color: 'inherit'\n    },\n    editor: {\n        marginLeft: 20,\n    },\n    snackBarMargin: {\n        [theme.breakpoints.down('sm')]: {\n            height: '90%',\n        }\n        // marginBottom: '150px',\n    }\n\n})\n\nexport class PyConsole extends Component {\n    static propTypes = {\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            code: { '0': `\"\"\"\"\"\".join([1, 2, 3, 4])`, '1': `\"\"\"\"\"\".join([1, 2, 3, 4])` },\n            codeOutput: { '0': `1234`, '1': `1234` },\n            settings: {\n                ...props.settings\n            },\n            rows: [1, 2]\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.el.scrollIntoView({ behavior: 'smooth' });\n\n        if (nextProps !== this.props) {\n            this.setState({\n                settings: {\n                    ...nextProps.settings\n                }\n            })\n        }\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n\n    scrollToBottom() {\n        const scrollHeight = this.el.scrollHeight;\n        const height = this.el.clientHeight;\n        const maxScrollTop = scrollHeight - height;\n        this.el.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n    }\n\n\n    onCodeChanged = (code, index) => this.setState({ code: { ...this.state.code, [index]: code } })\n\n    onLoad = (editor, index) => {\n        editor.on('change', (arg, activeEditor) => {\n            const aceEditor = activeEditor;\n            const newHeight = aceEditor.getSession().getScreenLength() *\n                (aceEditor.renderer.lineHeight + aceEditor.renderer.scrollBar.getWidth());\n            aceEditor.container.style.height = `${newHeight}px`;\n            aceEditor.resize();\n        });\n    };\n\n    onEnterPressed = event => {\n        if (event.key === 'Enter' && event.shiftKey) {\n            //Do whatever when esc is pressed\n            const rows = Object.keys(this.state.code).length\n            // const code = this.state.code[rows - 1]\n            this.setState({\n                rows: [...this.state.rows, rows],\n            })\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.onEnterPressed, false);\n        this.scrollToBottom();\n        socket.on('stt', (data)=> {\n            const rows = Object.keys(this.state.code).length\n            const text = this.state.code[rows - 1] + \" \" + data.text\n            this.setState({\n                code: {\n                    ...this.state.code,\n                    [rows - 1]: text\n                },\n            })\n        })\n        // const customMode = new CustomSqlMode();\n        // console.log(this.refs.aceEditor.editor)\n        // this.refs.aceEditor.editor.getSession().setMode(customMode);\n    }\n\n\n    selectedRow = false;\n    selectedRowNo = null;\n    intent = null;\n    onBeforeLoad = (ace, index) => {\n        let langTools = ace.acequire('ace/ext/language_tools');\n        let editor = ace.edit(`editor${index}`)\n        // console.log(ace)\n        let classRef = this;\n        editor.$blockScrolling = 'Infinity'\n        editor.setOptions({ enableBasicAutocompletion: true, enableLiveAutocompletion: true });\n        // let snippetManager = ace.acequire(\"ace/snippets\").snippetManager\n        // console.log(snippetManager)\n        // ace.define(\"ace/snippets/python\", [\"require\", \"exports\", \"module\"], (e, t, n) => {\n        //     console.log(t)\n        //     t.snippetText = 'snippet #!\\n\t#!/usr/bin/env python\\nsnippet load\\n\timport ${1:kill}\\n', t.scope = \"python\"\n        // })\n        let customCompleter = {\n            getCompletions: async function (editor, session, pos, prefix, callback) {\n                let completions = []\n                // let data = []\n                if (prefix.length === 0) {\n                    callback(null, []);\n                    return\n                }\n                if (prefix.startsWith('--')) {\n                    classRef.selectedRow = true\n                    classRef.selectedRowNo = pos.row\n\n                } else if (pos.row !== classRef.selectedRowNo) {\n                    classRef.selectedRowNo = null\n                    classRef.selectedRow = null\n                    classRef.intent = null\n                }\n                if (classRef.selectedRow) {\n                    const intent = session.getLine(pos.row).replace(\"--\", \"\").replace(\"#\", \"\").trim()\n                    console.log(intent)\n                    if (intent) {\n                        socket.emit('text-to-intents', { intent: intent })\n                        socket.on('onPredict', (res) => {\n                            res.predictions.forEach((item) => {\n                                completions.push({\n                                    caption: intent,\n                                    type: 'snippet',\n                                    meta: 'snippet',\n                                    // name: item.command,\n                                    value: item.command,\n                                    snippet: `${item.command}\\n${item.snippet}`\n                                })\n                            })\n                            console.log(completions)\n                            callback(null, completions)\n                        })\n                    }\n                }\n                return callback(null, [])\n            }\n        };\n\n        langTools.addCompleter(customCompleter);\n\n    }\n\n\n    render() {\n        const { classes } = this.props;\n        const {\n            theme,\n            language,\n            tabSize,\n            fontSize,\n            lazyMode,\n            splits,\n            orientation\n        } = this.state.settings;\n\n        return (\n            <div\n                ref={el => { this.el = el; }}\n                className={classNames(classes.root, {\n                    [classes.snackBarMargin]: lazyMode\n                })}>\n                {this.state.rows.map((item, index) => <Card key={index} className={classes.card} style={{ backgroundColor: (theme === 'dark') ? '#272822' : '#fff' }}>\n                    <CardContent className={classes.cardContent}>\n                        {/* <TextField\n                            defaultValue=\"Bare\"\n                            margin=\"normal\"\n                            className={classes.inputField}\n                            variant=\"outlined\"\n                        /> */}\n                        <Typography variant={'body1'} className={classes.lineInput} style={{ color: (theme === 'dark') ? '#fff' : 'inherit' }}>\n                            In [{index + 1}]\n                        </Typography>\n                        <div className={classes.editor} style={{ width: '80%' }}>\n                            <AceEditor\n                                mode={language}\n                                ref={'aceEditor' + index.toString()}\n                                theme={(theme === 'dark') ? \"monokai\" : \"crimson_editor\"}\n                                name={\"editor\" + index.toString()}\n                                splits={splits}\n                                orientation={orientation}\n                                value={this.state.code[index.toString()]}\n                                onLoad={editor => this.onLoad(editor, index)}\n                                onChange={code => this.onCodeChanged(code, index)}\n                                onBeforeLoad={ace => this.onBeforeLoad(ace, index.toString())}\n                                focus={true}\n                                showPrintMargin={true}\n                                fontSize={fontSize}\n                                readOnly={index + 1 !== this.state.rows.length}\n                                wrapEnabled\n                                showGutter\n                                highlightActiveLine={true}\n                                height={'20px'}\n                                style={{ width: '100%' }}\n                                setOptions={{\n                                    enableBasicAutocompletion: true,\n                                    enableLiveAutocompletion: true,\n                                    enableSnippets: true,\n                                    tabSize: tabSize,\n                                    showGutter: false,\n                                    showLineNumbers: false,\n                                    animatedScroll: true,\n                                    useWorker: true\n                                }}\n                                editorProps={{ $blockScrolling: 'Infinity' }}\n                            />\n                        </div>\n                    </CardContent>\n                    {this.state.codeOutput[index.toString()] && <TextField\n                        defaultValue={this.state.codeOutput[index.toString()]}\n                        className={classes.textField}\n                        margin=\"normal\"\n                        style={{ color: (theme === 'dark') ? '#fff' : 'inherit' }}\n                        InputProps={{\n                            readOnly: true,\n                            className: classNames(classes.inputProps, {\n                                [classes.inputPropsDark]: theme === 'dark',\n                            }),\n                        }}\n                        variant=\"outlined\"\n                    />}\n                </Card>)}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    settings: {\n        ...state.settings\n    }\n\n})\n\nconst mapDispatchToProps = {\n    handleSettingsChange\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(PyConsole))\n","\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column'\n    },\n    recorderButton: {\n        color: 'white'\n    },\n    soundWave: {\n        width: '100%',\n    },\n    controls: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%'\n    },\n    icon: {\n        fontSize: 20,\n    },\n    mic: {\n        backgroundColor: '#FF4081',\n    },\n    timer: {\n        color: '#17D4FE',\n        fontSize: '30px',\n        fontFamily: 'Orbitron',\n        letterSpacing: '7px'\n    }\n})\n\nexport default styles;","import React, { Component } from 'react'\nimport { ReactMic } from 'react-mic';\nimport { withStyles } from '@material-ui/core/styles';\nimport connect from \"react-redux/es/connect/connect\";\nimport Typography from '@material-ui/core/Typography'\nimport styles from './styles'\nimport MicIcon from '@material-ui/icons/MicRounded'\nimport PauseIcon from '@material-ui/icons/Pause';\nimport IconButton from '@material-ui/core/IconButton';\nimport { socket } from '../../resources/client'\n\n\nclass Recorder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            record: false,\n            secondsElapsed: 0,\n            lastClearedIncrementer: null,\n            persmission: false\n        }\n        this.incrementer = null\n\n    }\n\n    startRecording = async () => {\n        let stream = null;\n        if (!this.state.persmission) {\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        }\n        if (stream.active)\n            this.incrementer = setInterval(() =>\n                this.setState({\n                    secondsElapsed: this.state.secondsElapsed + 1,\n                    record: true,\n                    persmission: stream.active\n                })\n                , 1000);\n    }\n\n    stopRecording = async () => {\n        clearInterval(this.incrementer);\n        this.setState({\n            lastClearedIncrementer: this.incrementer,\n            record: false,\n            persmission: false\n        });\n    }\n\n    onData(recordedBlob) {\n        console.log('chunk of real-time data is: ', recordedBlob);\n        socket.emit('speech-to-intents', { blob: recordedBlob, size: recordedBlob.size })\n    }\n\n    onStop(recordedBlob) {\n        console.log('recordedBlob is: ', recordedBlob);\n    }\n\n\n    formattedSeconds = (sec) => Math.floor(sec / 60) + ':' + ('0' + sec % 60).slice(-2)\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <ReactMic\n                    record={this.state.record}\n                    className={classes.soundWave}\n                    onStop={this.onStop}\n                    visualSetting=\"sinewave\"\n                    audioBitsPerSecond={128000}\n                    onData={this.onData}\n                    strokeColor=\"#FF4081\"\n                    backgroundColor='rgb(49, 49, 49)'\n                />\n                <div className={classes.controls}>\n                    <Typography className={classes.timer}>\n                        {this.formattedSeconds(this.state.secondsElapsed)}\n                    </Typography>\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={classes.mic}\n                        onClick={!this.state.record ? this.startRecording : this.stopRecording}\n                    >\n                        {(!this.state.record) ? <MicIcon className={classes.icon} /> : <PauseIcon className={classes.icon} />}\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    settings: {\n        ...state.settings\n    }\n})\n\n\nexport default connect(mapStateToProps)(withStyles(styles)(Recorder));","/* eslint-disable no-unused-expressions */\nimport React, { Component } from 'react';\nimport CssBaseline from \"@material-ui/core/CssBaseline/CssBaseline\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Hidden from \"@material-ui/core/Hidden\";\nimport NavDrawer from \"../Drawer\"\nimport Header from \"../Header/index\"\nimport classNames from 'classnames';\nimport connect from \"react-redux/es/connect/connect\";\nimport { handleSettingsChange } from \"../../resources/redux/actions/settings\";\nimport AceEditor from '../AceEditor'\nimport PyConsole from '../PyConsole';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Recoder from '../Recorder'\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\n\n\n// let langTools = ace.acequire('ace/ext/language_tools');\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        flexDirection: 'column',\n        minHeight: \"100vh\",\n        height: \"100vh\",\n        overflow: 'hidden',\n        position: 'relative',\n        display: 'flex',\n        width: '100%',\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n        height: '90%',\n        width: '100%',\n        flexGrow: 1,\n\n        // padding: 5,\n        //#e8e8e8\n        [theme.breakpoints.down('xs')]: {\n            // paddingTop: theme.spacing.unit * 3,\n        },\n        [theme.breakpoints.up('sm')]: {\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            // paddingTop: theme.spacing.unit * 3,\n        }\n    },\n    contentShift: {\n        [theme.breakpoints.up('md')]: {\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            marginLeft: drawerWidth,\n            // paddingTop: theme.spacing.unit * 3,\n            paddingRight: drawerWidth,\n        },\n    },\n    recoderContent: {\n        backgroundColor: 'rgb(45, 45, 45)',\n        [theme.breakpoints.up('md')]: {\n            width: '20%'\n        }\n    },\n    snackBarMargin: {\n        [theme.breakpoints.down('sm')]: {\n            paddingBottom: '150px',\n        }\n    }\n    \n});\n\n\nclass Editor extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mobile: false,\n            side: true,\n            console: false,\n            selectedTabIndex: 1,\n            settings: {\n                ...props.settings\n            },\n        };\n    }\n\n    handleTabChange = (event, selectedTabIndex) => {\n        this.setState({ selectedTabIndex });\n    };\n\n    toggleDrawer = (type, open) => () => {\n        this.setState({\n            [type]: open,\n        });\n    };\n\n    handleDrawerMobileToggle = () => {\n        this.setState(state => ({ mobile: !state.mobile }));\n    };\n    handleDrawerToggle = () => {\n        this.setState(state => ({ side: !state.side }));\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps !== this.props) {\n            this.setState({\n                settings: {\n                    ...nextProps.settings\n                }\n            })\n        }\n    }\n\n    languageSelect = (name) => event => {\n        this.props.handleSettingsChange(name, event.target.value)\n    };\n\n    componentDidMount() {\n        // const customMode = new CustomSqlMode();\n        // console.log(this.refs.aceEditor.editor)\n        // this.refs.aceEditor.editor.getSession().setMode(customMode);\n    }\n\n    render() {\n        const { classes } = this.props;\n        const vertical = 'bottom';\n        const horizontal = 'right';\n        const {\n            theme,\n            language,\n            editorMode,\n            lazyMode\n        } = this.state.settings;\n\n        return (\n            <div className={classes.root} style={{\n                backgroundColor: (theme === 'dark') ? '#272822' : '#fff'\n            }}>\n                <CssBaseline />\n                <Header handleDrawerToggle={this.handleDrawerToggle}\n                    apptheme={theme}\n                    handleDrawerMobileToggle={this.handleDrawerMobileToggle}\n                    language={language}\n                    languageSelect={this.languageSelect('language')} />\n                <Hidden mdUp>\n                    <NavDrawer\n                        variant=\"temporary\"\n                        open={this.state.mobile}\n                        onClose={this.toggleDrawer('mobile', false)}\n                        selectedTabIndex={this.state.selectedTabIndex}\n                        handleTabChange={this.handleTabChange}\n                    />\n\n                </Hidden>\n                <div className={classes.toolbar} />\n                <Hidden smDown implementation=\"css\">\n                    <NavDrawer\n                        variant=\"persistent\"\n                        open={this.state.side}\n                        onClose={this.toggleDrawer('side', false)}\n                        selectedTabIndex={this.state.selectedTabIndex}\n                        handleTabChange={this.handleTabChange}\n                    >\n                    </NavDrawer>\n                </Hidden>\n                <main className={classNames(classes.content, {\n                    [classes.contentShift]: this.state.side,\n                    [classes.snackBarMargin]: lazyMode\n                })}>\n                    {editorMode === 'pyconsole' && <PyConsole />}\n\n                    {editorMode === 'editor' && <AceEditor />}\n\n                </main>\n                <Snackbar\n                    anchorOrigin={{ vertical, horizontal }}\n                    open={lazyMode}\n                >\n                    <SnackbarContent\n                        className={classes.recoderContent}\n                        aria-describedby=\"client-snackbar\"\n                        message={\n                            <span id=\"client-snackbar\" className={classes.message}>\n                                <Recoder />\n                            </span>\n                        }\n                    />\n                </Snackbar>\n                {/* <Button style={{ display: 'flex' }}>\n                    <Typography variant={'button'} color={\"secondary\"} onClick={this.toggleDrawer('console', true)}>\n                        Console\n                    </Typography>\n                </Button>\n\n                <SwipeableDrawer\n                    anchor=\"bottom\"\n                    open={this.state.console}\n                    onClose={this.toggleDrawer('console', false)}\n                    onOpen={this.toggleDrawer('console', true)}\n                >\n                    <div\n                        tabIndex={0}\n                        role=\"button\"\n                        onClick={this.toggleDrawer('console', false)}\n                        onKeyDown={this.toggleDrawer('console', false)}\n                        style={{ height: '30vh', marginLeft: drawerWidth }}\n                    >\n                        {/*hey*/}\n                {/*{fullList}*/}\n                {/* </div> */}\n                {/* </SwipeableDrawer> */}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    settings: {\n        ...state.settings\n    }\n})\n\nconst mapDispatchToProps = {\n    handleSettingsChange\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Editor));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs mobile on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {MuiThemeProvider} from '@material-ui/core/es/styles'\nimport {Provider} from \"react-redux\";\nimport {render} from 'react-dom'\nimport {store} from \"./resources/redux/store\";\nimport Routes from \"./Routes\";\nimport {theme} from \"./resources/constants\";\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n    <Provider store={store}>\n        <MuiThemeProvider theme={theme}>\n            <Routes/>\n        </MuiThemeProvider>\n    </Provider>\n    ,\n    document.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport {Route, Router} from 'react-router'\nimport {history} from \"./resources/redux/store/index\";\nimport App from \"./App\";\nimport Editor from \"./Components/pages/Editor\";\n\n\nexport default () => (\n    <Router history={history}>\n        <Route exact path={'/'} component={() => <App history={history}/>}/>\n        <Route path={'/code'} component={Editor}/>\n    </Router>\n)\n"],"sourceRoot":""}